version: '3'

networks:
  test-net:
    external: true

volumes:
  pg-data:
  portainer-data:

services: 
  golang-redis-pg:
    container_name: golang-redis-pg
    environment:
      GLP_LISTEN_PORT: 9998
      GLP_REDIS_HOST: test-stack-redis.traefik
      GLP_REDIS_PORT: 6379
      GLP_PG_HOST: test-stack-pg.traefik
      GLP_PG_PORT: 5432
      GLP_PG_USER: postgres
      GLP_PG_PASS: password
      GLP_PG_DB: postgres
    image: rms1000watt/golang-redis-pg:latest
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.svc == true
      restart_policy:
        condition: any
      labels:
        traefik.port: "9998"
        traefik.docker.network: test-net
    networks:
      test-net:
        aliases:
        - test-stack-golang-redis-pg.traefik
    ports:
    - 9998:9998
    depends_on:
    - redis
    - pg

  redis:
    container_name: redis
    image: redis:4.0.6-alpine
    deploy:
      placement:
        constraints:
          - node.labels.db == true
      restart_policy:
        condition: any
      labels:
        traefik.port: "6379"
        traefik.docker.network: test-net
    networks:
      test-net:
        aliases:
        - test-stack-redis.traefik
    ports:
    - 6379:6379

  pg:
    container_name: pg
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    image: postgres:9.6.6-alpine
    deploy:
      placement:
        constraints:
          - node.labels.db == true
          - node.labels.pg-master == true
      restart_policy:
        condition: any
      labels:
        traefik.port: "5432"
        traefik.docker.network: test-net
    networks:
      test-net:
        aliases:
        - test-stack-pg.traefik
    ports:
    - 5432:5432
    volumes:
    - pg-data:/var/lib/postgresql/data

  portainer:
    container_name: portainer
    image: portainer/portainer
    deploy:
      placement:
        constraints: 
        - node.role == manager
      restart_policy:
        condition: any
      labels:
        traefik.port: "9000"
        traefik.docker.network: test-net
    networks:
      test-net:
        aliases:
        - test-stack-portainer.traefik
    ports:
    - 9000:9000
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - portainer-data:/data

  traefik:
    container_name: traefik
    command: --logLevel=DEBUG --docker --docker.swarmmode --docker.domain=traefik --docker.watch --web
    image: traefik:v1.4.6-alpine
    privileged: true
    deploy:
      placement:
        constraints: 
        - node.role == manager
      restart_policy:
        condition: any
    networks:
    - test-net
    ports:
    - 80:80
    - 8080:8080
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
